{"ast":null,"code":"var _jsxFileName = \"/Users/naomingo/myapps/comp4882/Nutrition-App/src/Components/CreateProfile/src/components/MaterialDisabledTextbox.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Font from 'expo-font';\n\nfunction MaterialDisabledTextbox(props) {\n  function action(text) {\n    if (\"lastName\" in props) {\n      props.onLastNameChange(text);\n    } else if (\"firstName\" in props) {\n      props.onFristNameChange(text);\n    } else if (\"phoneNumber\" in props) {\n      props.onPhoneNumberChange(text);\n    } else if (\"address\" in props) {\n      props.onAddressChange(text);\n    } else if (\"email\" in props) {\n      props.onEmailChange(text);\n    } else if (\"password\" in props) {\n      props.onPasswordChange(text);\n    } else if (\"passwordConfirm\" in props) {\n      props.onPasswordConfirmChange(text);\n    }\n  }\n\n  function rendering() {\n    if (\"email\" in props) {\n      return React.createElement(TextInput, {\n        placeholder: \"email\",\n        style: [styles.inputStyle],\n        onChangeText: action,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      });\n    } else if (\"password\" in props) {\n      return React.createElement(TextInput, {\n        placeholder: \"password\",\n        style: [styles.inputStyle],\n        onChangeText: action,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      });\n    } else if (\"passwordConfirm\" in props) {\n      return React.createElement(TextInput, {\n        placeholder: \"Confirm Password\",\n        style: [styles.inputStyle],\n        onChangeText: action,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return React.createElement(TextInput, {\n        placeholder: props.placeholder,\n        style: [styles.inputStyle],\n        onChangeText: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: [styles.container, props.style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, rendering(), React.createElement(Icon, {\n    name: \"information-outline\",\n    style: styles.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#D9D5DC\",\n    borderBottomWidth: 1\n  },\n  inputStyle: {\n    flex: 1,\n    color: \"#000\",\n    alignSelf: \"stretch\",\n    paddingTop: 16,\n    paddingRight: 5,\n    paddingBottom: 8,\n    fontSize: 16,\n    fontFamily: \"roboto-regular\",\n    lineHeight: 16\n  },\n  iconStyle: {\n    color: \"#384850\",\n    fontFamily: \"Roboto\",\n    fontSize: 24,\n    paddingRight: 8,\n    opacity: 0.7\n  }\n});\nexport default MaterialDisabledTextbox;","map":{"version":3,"sources":["/Users/naomingo/myapps/comp4882/Nutrition-App/src/Components/CreateProfile/src/components/MaterialDisabledTextbox.js"],"names":["React","Component","useState","useEffect","Icon","Font","MaterialDisabledTextbox","props","action","text","onLastNameChange","onFristNameChange","onPhoneNumberChange","onAddressChange","onEmailChange","onPasswordChange","onPasswordConfirmChange","rendering","styles","inputStyle","placeholder","container","style","iconStyle","StyleSheet","create","backgroundColor","flexDirection","alignItems","borderColor","borderBottomWidth","flex","color","alignSelf","paddingTop","paddingRight","paddingBottom","fontSize","fontFamily","lineHeight","opacity"],"mappings":"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","sourcesContent":["import React, { Component,useState,useEffect } from \"react\";\nimport { StyleSheet, View, TextInput,Text } from \"react-native\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\n\n\nimport * as Font from 'expo-font';\n\nfunction MaterialDisabledTextbox(props) {\n\n  function action(text){\n    if(\"lastName\" in props){\n      props.onLastNameChange(text);\n    }else if(\"firstName\" in props){\n      props.onFristNameChange(text);\n    }else if(\"phoneNumber\" in props){\n      props.onPhoneNumberChange(text);\n    }else if(\"address\" in props){\n      props.onAddressChange(text);\n    }else if(\"email\" in props){\n      props.onEmailChange(text)\n    }else if(\"password\" in props){\n      props.onPasswordChange(text)\n    }else if(\"passwordConfirm\" in props){\n      props.onPasswordConfirmChange(text)\n    }\n  }\n\n  function rendering(){\n    if(\"email\" in props){\n      return(\n        <TextInput \n          placeholder=\"email\"\n          style={[styles.inputStyle]}\n          onChangeText={action}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n      )\n    }else if(\"password\" in props){\n      return (<TextInput \n          placeholder=\"password\"\n          style={[styles.inputStyle]}\n          onChangeText={action}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />)\n    }else if(\"passwordConfirm\" in props){\n      return(<TextInput \n          placeholder=\"Confirm Password\"\n          style={[styles.inputStyle]}\n          onChangeText={action}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />)\n    }else{\n      return(<TextInput\n        placeholder={props.placeholder}\n        style={[styles.inputStyle]}\n        onChangeText={action}\n      />)\n    }\n  }\n\n  return (\n    <View style={[styles.container, props.style]}>\n      {rendering()}\n      <Icon name=\"information-outline\" style={styles.iconStyle}></Icon>\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#D9D5DC\",\n    borderBottomWidth: 1\n  },\n  inputStyle: {\n    flex: 1,\n    color: \"#000\",\n    alignSelf: \"stretch\",\n    paddingTop: 16,\n    paddingRight: 5,\n    paddingBottom: 8,\n    fontSize: 16,\n    fontFamily: \"roboto-regular\",\n    lineHeight: 16\n  },\n  iconStyle: {\n    color: \"#384850\",\n    fontFamily: \"Roboto\",\n    fontSize: 24,\n    paddingRight: 8,\n    opacity: 0.7\n  }\n});\n\nexport default MaterialDisabledTextbox;\n"]},"metadata":{},"sourceType":"module"}